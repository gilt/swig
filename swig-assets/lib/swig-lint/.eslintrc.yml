parser: "babel-eslint"
extends: "airbnb"
env:
  browser: true
  node: true
  mocha: true

globals:
  gilt: false
  requireSpecs: false
  getJSONString: false
  describe: false
  xdescribe: false
  it: false
  xit: false
  expect: false
  jasmine: false
  spyOn: false
  afterEach: false
  beforeEach: false
  waits: false
  waitsFor: false
  runs: false
  sinon: false

rules:
  # Overriding AirBnb style guide (some of their rules are a bit too strict)
  react/prefer-es6-class: 1
  react/no-unused-prop-types: [2, { skipShapeProps: true }]
  comma-dangle: 0
  func-names: 0
  no-param-reassign: 0
  global-require: 0
  jsx-quotes: [2, "prefer-single"]
  space-before-function-paren: 0
  no-bitwise: 0
  no-plusplus: 0
  strict: 0
  default-case: 1
  no-void: 1

  # Rules commented out because are currently switched of below
  # (Avoiding duplicate entry warning)
  # prefer-arrow-callback: 1
  # quote-props: [1, "as-needed", {
  #   keywords: false
  #   unnecessary: true
  #   numbers: false
  # }]
  # prefer-template: 1
  # no-unused-vars: 1
  # one-var: [1, "always"]
  # no-var: 1
  # object-shorthand: [1, "always", { avoidQuotes: true }]


  # These two rules slow down the linting process considerably.
  # Switching them off to have a better coding experience (at least on Atom)
  import/no-named-as-default: "off"
  import/no-named-as-default-member: "off"


  # List of rules switched off to be compatible with existing code.
  # Ideally these should be removed once the codebase has been cleaned up.
  no-underscore-dangle: 0
  no-use-before-define: 0
  no-shadow: 0
  spaced-comment: 0
  no-else-return: 0
  max-len: 0
  object-curly-spacing: 0
  prefer-rest-params: 0
  no-nested-ternary: 0
  comma-spacing: 0
  vars-on-top: 0
  object-shorthand: [0, "always"]
  eol-last: 0
  no-var: 0
  prefer-template: 0
  key-spacing: 0
  quote-props: 0
  prefer-arrow-callback: 0
  no-multi-spaces: 0
  keyword-spacing: 0
  padded-blocks: 0
  indent: 0
  one-var: 0
  space-infix-ops: 0
  no-lonely-if: 0
  space-before-blocks: 0
  no-unused-vars: 0
  consistent-return: 0
  space-in-parens: 0
  no-restricted-syntax: 0
  guard-for-in: 0
  no-unneeded-ternary: 0
  no-sequences: 0
  no-return-assign: 0
  no-useless-escape: 0
  no-undef: 0
  no-cond-assign: 0
  no-trailing-spaces: 0
  camelcase: 0
  no-mixed-operators: 0
  brace-style: 0
  no-empty: 0
  no-console: 0
  no-unused-expressions: 0
  eqeqeq: 0
  one-var-declaration-per-line: 0
  no-continue: 0
  yoda: 0
  dot-notation: 0
  new-cap: 0
  computed-property-spacing: 0
  space-unary-ops: 0
  block-spacing: 0
  no-spaced-func: 0
  prefer-spread: 0
  func-call-spacing: 0
  semi-spacing: 0
  array-bracket-spacing: 0
  lines-around-directive: 0
  newline-per-chained-call: 0
  no-extra-boolean-cast: 0
  no-unreachable: 0
  wrap-iife: 0
  no-multiple-empty-lines: 0
  valid-typeof: 0
  no-extend-native: 0
